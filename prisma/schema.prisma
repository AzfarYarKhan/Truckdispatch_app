// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}
model User {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  name String?
  email String @unique
  emailVerified  DateTime?
  image String?
  hashedPassword String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  role String @default("driver")
  accounts account[]
  driver Driver?
}
model account {
 id String @id @default(auto()) @map("_id") @db.ObjectId
 userId String @db.ObjectId
 type String
 provider String
 providerAccountId String
 refresh_token String? @db.String
access_token String? @db.String
expires_at Int?
token_type String?
scope String?
id_token String? @db.String
session_state String?

user User @relation(fields: [userId], references: [id], onDelete: Cascade)
@@unique([provider,providerAccountId ])
}

model Driver {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  userId String @unique@db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  company String
  address String
  phone_number String
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  jobs Job[]
}
model Job {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  driverId String @db.ObjectId 
  date DateTime
  distance Int
  job_name String
  pickup_loc LatitudeLongitude
  dropoff_loc LatitudeLongitude
  pickup_name String
  dropoff_name String
  status Status
  createdAt DateTime @default(now())
  driver Driver @relation(fields: [driverId], references: [id])
}

type LatitudeLongitude {
  lat Float
  lon Float
}
enum Status {
  COMPLETED
  PENDING
  MISSED
  ACTIVE
}